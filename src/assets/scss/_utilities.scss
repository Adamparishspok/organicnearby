//
// utilities.scss
// Extended from Bootstrap
//

@import '../../node_modules/bootstrap/scss/functions';
@import '../../node_modules/bootstrap/scss/variables';
@import '../../node_modules/bootstrap/scss/maps';
@import '../../node_modules/bootstrap/scss/mixins';
@import '../../node_modules/bootstrap/scss/utilities';
@import '../../node_modules/bootstrap/scsapi';

$all-colors: map-merge-multiple(
  $blues,
  $indigos,
  $purples,
  $pinks,
  $reds,
  $oranges,
  $yellows,
  $greens,
  $teals,
  $cyans
);

$utilities: () !default;

$utilities: map-merge(
  $utilities,
  (
    'border': (
      property: border,
      responsive: true,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    'border-start': (
      property: border-left,
      class: border-start,
      responsive: true,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    'border-end': (
      property: border-right,
      class: border-end,
      responsive: true,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    'border-top': (
      property: border-top,
      class: border-top,
      responsive: true,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    'border-bottom': (
      property: border-bottom,
      class: border-bottom,
      responsive: true,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    'width': (
      property: width,
      responsive: true,
      class: w,
      values: (
        0: 0%,
        5: 5%,
        10: 10%,
        15: 15%,
        20: 20%,
        25: 25%,
        30: 30%,
        40: 40%,
        45: 45%,
        50: 50%,
        65: 65%,
        75: 75%,
        100: 100%,
        auto: auto,
      ),
    ),
    'position': (
      property: position,
      values: static relative absolute fixed sticky,
      responsive: true,
    ),
    'top': (
      property: top,
      values: $position-values,
      responsive: true,
    ),
    'bottom': (
      property: bottom,
      values: $position-values,
      responsive: true,
    ),
    'start': (
      property: left,
      class: start,
      values: $position-values,
      responsive: true,
    ),
    'end': (
      property: right,
      class: end,
      values: $position-values,
      responsive: true,
    ),
    'visibility': (
      property: visibility,
      class: visibility,
      responsive: true,

      values: (
        visible: visible,
        invisible: hidden,
      ),
    ),
    'z-index': (
      property: z-index,
      class: z,
      values: (
        -1: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
      ),
    ),
    'rounded': (
      property: border-radius,
      responsive: true,
      class: rounded,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    'rounded-top': (
      property: border-top-left-radius border-top-right-radius,
      responsive: true,
      class: rounded-top,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    'rounded-end': (
      property: border-top-right-radius border-bottom-right-radius,
      responsive: true,
      class: rounded-end,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    'rounded-bottom': (
      property: border-bottom-right-radius border-bottom-left-radius,
      responsive: true,
      class: rounded-bottom,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    'rounded-start': (
      property: border-bottom-left-radius border-top-left-radius,
      responsive: true,
      class: rounded-start,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
    'color': (
      map-merge(
        map-get($utilities, 'color'),
        (
          values:
            map-merge(
              map-get(map-get($utilities, 'color'), 'values'),
              ($all-colors)
            ),
        )
      ),
    ),
    'background-color': (
      property: background-color,
      class: bg,
      local-vars: (
        'bg-opacity': 1,
      ),
      values:
        map-merge(
          $all-colors,
          (
            'transparent': transparent,
            'body-secondary':
              rgba(
                var(--#{$prefix}secondary-bg-rgb),
                var(--#{$prefix}bg-opacity)
              ),
            'body-tertiary':
              rgba(
                var(--#{$prefix}tertiary-bg-rgb),
                var(--#{$prefix}bg-opacity)
              ),
            'body-emphasis':
              rgba(
                var(--#{$prefix}emphasis-bg-rgb),
                var(--#{$prefix}bg-opacity)
              ),
            'gray-100': $gray-100,
            'gray-200': $gray-200,
            'gray-300': $gray-300,
            'gray-400': $gray-400,
            'gray-500': $gray-500,
            'gray-600': $gray-600,
            'gray-700': $gray-700,
            'gray-800': $gray-800,
            'gray-900': $gray-900,
          )
        ),
    ),
    'bg-opacity': (
      css-var: true,
      class: bg-opacity,
      values: (
        10: 0.1,
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
    'subtle-background-color': (
      property: background-color,
      class: bg,
      values: $utilities-bg-subtle,
    ),
  )
);

// Utilities classes
// Text

.text-inherit {
  color: var(--#{$prefix}gray-800);
}

.text-reset {
  &:hover {
    color: var(--#{$prefix}primary) !important;
  }
}

.text-inverse {
  -webkit-filter: brightness(0) invert(1);
  filter: brightness(0) invert(1);
}
// Icon shape

.icon-xxs {
  width: $icon-size-xxs;
  height: $icon-size-xxs;
  line-height: $icon-size-xxs;
}
.icon-xs {
  width: $icon-size-xs;
  height: $icon-size-xs;
  line-height: $icon-size-xs;
}
.icon-sm {
  width: $icon-size-sm;
  height: $icon-size-sm;
  line-height: $icon-size-sm;
}
.icon-md {
  width: $icon-size-md;
  height: $icon-size-md;
  line-height: $icon-size-md;
}
.icon-lg {
  width: $icon-size-lg;
  height: $icon-size-lg;
  line-height: $icon-size-lg;
}
.icon-xl {
  width: $icon-size-xl;
  height: $icon-size-xl;
  line-height: $icon-size-xl;
}
.icon-xxl {
  width: $icon-size-xxl;
  height: $icon-size-xxl;
  line-height: $icon-size-xxl;
}

.icon-xxxl {
  width: $icon-size-xxxl;
  height: $icon-size-xxxl;
  line-height: $icon-size-xxxl;
}
.icon-shape {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  vertical-align: middle;
}
// Border dashed

.border-dashed {
  border: 2px dashed var(--#{$prefix}gray-300) !important;
}

// zoom

.img-zoom {
  border-radius: 0.5rem;
  overflow: hidden;
  img {
    transition: transform 0.5s ease;
    &:hover {
      transform: scale(1.1);
    }
  }
}

// zoom img
div.zoom {
  & img:hover {
    opacity: 0;
  }
  img {
    transition: opacity 0.5s;
    display: block;
    width: 100%;
  }
  background-position: 50% 50%;
  position: relative;
  width: 100%;
  overflow: hidden;
  cursor: zoom-in;
  border-radius: 0.5rem;
}

// simplebar

.simplebar-scrollbar:before {
  background: var(--#{$prefix}gray-400);
}
